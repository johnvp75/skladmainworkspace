
import java.sql.ResultSet;
import java.util.GregorianCalendar;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * EditDoc.java
 *
 * Created on 21 серп 2009, 22:56:18
 */

/**
 *
 * @author Жека
 */
public class EditDoc extends javax.swing.JDialog {

    /** Creates new form EditDoc */
    public EditDoc(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        EditTableModel model=new EditTableModel(getSQL());
        naklTable = new javax.swing.JTable();
        clientCheck = new javax.swing.JCheckBox();
        dateCheck = new javax.swing.JCheckBox();
        numbCheck = new javax.swing.JCheckBox();
        clientCombo = new javax.swing.JComboBox();
        dateButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        startdateText = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        endnumbText = new javax.swing.JTextField();
        noteCheck = new javax.swing.JCheckBox();
        noteText = new javax.swing.JTextField();
        regCheck = new javax.swing.JCheckBox();
        nonregCheck = new javax.swing.JCheckBox();
        managerCheck = new javax.swing.JCheckBox();
        managerCombo = new javax.swing.JComboBox();
        skladCheck = new javax.swing.JCheckBox();
        skladCombo = new javax.swing.JComboBox();
        curCheck = new javax.swing.JCheckBox();
        curCombo = new javax.swing.JComboBox();
        typeCheck = new javax.swing.JCheckBox();
        typeCombo = new javax.swing.JComboBox();
        sumCheck = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        startsumText = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        endsumText = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        naklTable.setModel(model);
        naklTable.setColumnSelectionAllowed(true);
        naklTable.getTableHeader().setReorderingAllowed(false);
        naklTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                naklTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(naklTable);
        naklTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        clientCheck.setText("Контрагент");

        dateCheck.setSelected(true);
        dateCheck.setText("По дате");

        numbCheck.setText("По номеру");
        numbCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numbCheckActionPerformed(evt);
            }
        });

        dateButton.setText("-");

        jLabel1.setText("с");

        jLabel2.setText("по");

        endnumbText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                endnumbTextActionPerformed(evt);
            }
        });

        noteCheck.setText("По части примечания");

        regCheck.setText("Проведенные");

        nonregCheck.setText("Не проведенные");

        managerCheck.setText("Менеджер");

        skladCheck.setText("Склад");
        skladCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                skladCheckActionPerformed(evt);
            }
        });

        curCheck.setText("Валюта");
        curCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                curCheckActionPerformed(evt);
            }
        });

        typeCheck.setText("Тип документа");

        sumCheck.setText("Сумма");
        sumCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sumCheckActionPerformed(evt);
            }
        });

        jLabel3.setText("с");

        jLabel4.setText("по");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1219, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(numbCheck)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(startdateText, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(endnumbText, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(dateCheck)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(dateButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(clientCheck)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(clientCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(managerCheck)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(managerCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(nonregCheck)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(regCheck)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(skladCheck)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(skladCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(curCheck)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(curCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(typeCheck)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(typeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                                        .addComponent(sumCheck)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(startsumText, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(endsumText, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(107, 107, 107))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(noteCheck)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(noteText, javax.swing.GroupLayout.DEFAULT_SIZE, 790, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(clientCheck)
                            .addComponent(clientCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(noteCheck)
                            .addComponent(noteText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(dateCheck)
                                .addComponent(dateButton)
                                .addComponent(nonregCheck))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(sumCheck)
                                .addComponent(jLabel3)
                                .addComponent(startsumText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel4)
                                .addComponent(endsumText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(regCheck)
                        .addComponent(typeCheck)
                        .addComponent(typeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numbCheck)
                    .addComponent(jLabel1)
                    .addComponent(startdateText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(endnumbText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(managerCheck)
                    .addComponent(managerCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(skladCheck)
                    .addComponent(skladCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(curCheck)
                    .addComponent(curCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 6, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        setSQL(String.format("and d.id_type_doc in (select id_type_doc from type_doc where operacia=%s)", getType_doc()));
        initelements();
        SQL();

    }//GEN-LAST:event_formComponentShown

    private void naklTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_naklTableMouseClicked
        if (evt.getClickCount()==2){
            MainFrame.setEditDocId(((EditTableModel)naklTable.getModel()).getId(naklTable.getSelectedRow()));
            setVisible(false);
        }
    }//GEN-LAST:event_naklTableMouseClicked

    private void numbCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numbCheckActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_numbCheckActionPerformed

    private void skladCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_skladCheckActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_skladCheckActionPerformed
    public int type_doc;

    public int getType_doc() {
        return type_doc;
    }

    public void setType_doc(int type_doc) {
        this.type_doc = type_doc;
    }

    private void curCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_curCheckActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_curCheckActionPerformed

    private void sumCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sumCheckActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sumCheckActionPerformed

    private void endnumbTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_endnumbTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_endnumbTextActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                EditDoc dialog = new EditDoc(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox clientCheck;
    private javax.swing.JComboBox clientCombo;
    private javax.swing.JCheckBox curCheck;
    private javax.swing.JComboBox curCombo;
    private javax.swing.JButton dateButton;
    private javax.swing.JCheckBox dateCheck;
    private javax.swing.JTextField endnumbText;
    private javax.swing.JTextField endsumText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JCheckBox managerCheck;
    private javax.swing.JComboBox managerCombo;
    private javax.swing.JTable naklTable;
    private javax.swing.JCheckBox nonregCheck;
    private javax.swing.JCheckBox noteCheck;
    private javax.swing.JTextField noteText;
    private javax.swing.JCheckBox numbCheck;
    private javax.swing.JCheckBox regCheck;
    private javax.swing.JCheckBox skladCheck;
    private javax.swing.JComboBox skladCombo;
    private javax.swing.JTextField startdateText;
    private javax.swing.JTextField startsumText;
    private javax.swing.JCheckBox sumCheck;
    private javax.swing.JCheckBox typeCheck;
    private javax.swing.JComboBox typeCombo;
    // End of variables declaration//GEN-END:variables
    private String SQL=" and d.id_type_doc in (select id_type_doc from type_doc where operacia=1) ";
    private GregorianCalendar startDate = new GregorianCalendar();
    private GregorianCalendar endDate = new GregorianCalendar();
    private String clientSQL = " ";
    private String dateSQL = " ";
    private String numbSQL = " ";
    private String noteSQL = " ";
    private String regSQL = " ";
    private String managerSQL = " ";
    private String skladSQL = " ";
    private String currSQL = " ";
    private String typeSQL = " ";
    private String sumSQL = " ";

    public String getSumSQL() {
        return sumSQL;
    }

    public void setSumSQL(String sumSQL) {
        this.sumSQL = sumSQL;
    }

    public String getTypeSQL() {
        return typeSQL;
    }

    public void setTypeSQL(String typeSQL) {
        this.typeSQL = typeSQL;
    }

    public String getCurrSQL() {
        return currSQL;
    }

    public void setCurrSQL(String currSQL) {
        this.currSQL = currSQL;
    }

    public String getSkladSQL() {
        return skladSQL;
    }

    public void setSkladSQL(String skladSQL) {
        this.skladSQL = skladSQL;
    }

    public String getManagerSQL() {
        return managerSQL;
    }

    public void setManagerSQL(String managerSQL) {
        this.managerSQL = managerSQL;
    }

    public String getRegSQL() {
        return regSQL;
    }

    public void setRegSQL(String regSQL) {
        this.regSQL = regSQL;
    }

    public String getNoteSQL() {
        return noteSQL;
    }

    public void setNoteSQL(String noteSQL) {
        this.noteSQL = noteSQL;
    }

    public String getNumbSQL() {
        return numbSQL;
    }

    public void setNumbSQL(String numbSQL) {
        this.numbSQL = numbSQL;
    }

    /**
     * Get the value of dateSQL
     *
     * @return the value of dateSQL
     */
    public String getDateSQL() {
        return dateSQL;
    }

    /**
     * Set the value of dateSQL
     *
     * @param dateSQL new value of dateSQL
     */
    public void setDateSQL(String dateSQL) {
        this.dateSQL = dateSQL;
    }

    public String getClientSQL() {
        return clientSQL;
    }

    public void setClientSQL(String clientSQL) {
        this.clientSQL = clientSQL;
    }

    public GregorianCalendar getEndDate() {
        return endDate;
    }

    public void setEndDate(GregorianCalendar EndDate) {
        this.endDate = EndDate;
    }

    private GregorianCalendar getStartDate() {
        return startDate;
    }

    private void setStartDate(GregorianCalendar startDate) {
        this.startDate = startDate;
    }

    private String getSQL() {
        return SQL;
    }

    private void setSQL(String SQL) {
        this.SQL = SQL;
    }
    private void initelements(){
        try{
            ResultSet rs=DataSet.QueryExec("select trim(name) from client order by upper(trim(name))", false);
            String item=null;
            if (clientCombo.getItemCount()>0){
                item=(String)clientCombo.getSelectedItem();
            }
            clientCombo.removeAllItems();
            while (rs.next()){
                clientCombo.addItem(rs.getString(1));
            }
            if (item!=null){
                clientCombo.setSelectedItem(item);
            }else{
                clientCombo.setSelectedIndex(0);
            }
            if (dateButton.getText().equals("-")){
                startDate.add(GregorianCalendar.DATE, -7);
                dateButton.setText(String.format("%1$td.%1$tm.%1$tY - %2$td.%2$tm.%2$tY", getStartDate(),getEndDate()));
/*
                setDateSQL(String.format("and d.day between '%s.%s.%s' and '%s.%s.%s'",  getStartDate().get(GregorianCalendar.DAY_OF_MONTH),getStartDate().get(GregorianCalendar.MONTH)+1,
                        getStartDate().get(GregorianCalendar.YEAR),getEndDate().get(GregorianCalendar.DAY_OF_MONTH),getEndDate().get(GregorianCalendar.MONTH)+1,
                        getEndDate().get(GregorianCalendar.YEAR)));
 *
 */
                GregorianCalendar end=getEndDate();
                end.add(GregorianCalendar.DATE, 1);
                setDateSQL(String.format("and d.day between to_date('%1$td.%1$tm.%1$tY','DD.MM.YYYY') and to_date('%2$td.%2$tm.%2$tY','DD.MM.YYYY')", getStartDate(),end));
            }
            rs=DataSet.QueryExec("select trim(name) from manager order by upper(trim(name))", false);
            item=null;
            if (managerCombo.getItemCount()>0){
                item=(String)managerCombo.getSelectedItem();
            }
            managerCombo.removeAllItems();
            while (rs.next()){
                managerCombo.addItem(rs.getString(1));
            }
            if (item!=null){
                managerCombo.setSelectedItem(item);
            }else{
                managerCombo.setSelectedIndex(0);
            }
            rs=DataSet.QueryExec("select trim(name) from type_doc order by upper(trim(name))", false);
            item=null;
            if (typeCombo.getItemCount()>0){
                item=(String)typeCombo.getSelectedItem();
            }
            typeCombo.removeAllItems();
            while (rs.next()){
                typeCombo.addItem(rs.getString(1));
            }
            if (item!=null){
                typeCombo.setSelectedItem(item);
            }else{
                typeCombo.setSelectedIndex(0);
            }
            rs=DataSet.QueryExec("select trim(name) from val order by upper(trim(name))", false);
            item=null;
            if (curCombo.getItemCount()>0){
                item=(String)curCombo.getSelectedItem();
            }
            curCombo.removeAllItems();
            while (rs.next()){
                curCombo.addItem(rs.getString(1));
            }
            if (item!=null){
                curCombo.setSelectedItem(item);
            }else{
                curCombo.setSelectedIndex(0);
            }
            rs=DataSet.QueryExec("select trim(name) from sklad order by upper(trim(name))", false);
            item=null;
            if (skladCombo.getItemCount()>0){
                item=(String)skladCombo.getSelectedItem();
            }
            skladCombo.removeAllItems();
            while (rs.next()){
                skladCombo.addItem(rs.getString(1));
            }
            if (item!=null){
                skladCombo.setSelectedItem(item);
            }else{
                skladCombo.setSelectedIndex(0);
            }

        }catch(Exception e){
            e.printStackTrace();
        }

    }
    private void SQL(){
        String sql=(String.format("%s %s %s %s %s %s %s %s %s %s %s", getSQL(),getClientSQL(),getDateSQL(),
                getNoteSQL(),getNumbSQL(),getRegSQL(),getManagerSQL(),getSkladSQL(),getCurrSQL(),getTypeSQL(),getSumSQL()));
        ((EditTableModel)naklTable.getModel()).update(sql);
    }

}
