
import java.sql.ResultSet;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.tree.TreeSelectionModel;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * GroupAndSectionWire.java
 *
 * Created on 31 серп 2011, 13:04:39
 */

/**
 *
 * @author жд
 */
public class SaleBan extends javax.swing.JDialog {

    /** Creates new form GroupAndSectionWire */
    public SaleBan(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        treePopup = new javax.swing.JPopupMenu();
        listTovar = new javax.swing.JMenuItem();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        groupTree = new javax.swing.JTree(new GroupTreeModel());
        isBanForGroupTree = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();

        listTovar.setText("Содержимое группы");
        listTovar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listTovarActionPerformed(evt);
            }
        });
        treePopup.add(listTovar);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setModal(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                formComponentHidden(evt);
            }
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jButton1.setText("Сохранить и закрыть");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Группы");

        groupTree.setRootVisible(false);
        groupTree.setShowsRootHandles(true);
        groupTree.getSelectionModel().setSelectionMode(TreeSelectionModel.SINGLE_TREE_SELECTION);
        groupTree.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        groupTree.setComponentPopupMenu(treePopup);
        groupTree.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                groupTreeValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(groupTree);

        isBanForGroupTree.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Разрешена", "Запрещена" }));
        isBanForGroupTree.setFocusable(false);
        isBanForGroupTree.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                isBanForGroupTreePopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        isBanForGroupTree.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                isBanForGroupTreeItemStateChanged(evt);
            }
        });
        isBanForGroupTree.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isBanForGroupTreeActionPerformed(evt);
            }
        });

        jLabel2.setText("Продажа:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(isBanForGroupTree, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addContainerGap(84, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(94, 94, 94)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 186, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(159, 159, 159))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(isBanForGroupTree, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void groupTreeValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_groupTreeValueChanged
        Integer index=null;
        if (evt.getOldLeadSelectionPath()!=null)
            index=((DataNode)evt.getOldLeadSelectionPath().getLastPathComponent()).getIndex();
        String SQL="";
        if (index!=null && isChange()){
            try{
                SQL=String.format("Update groupid set ban=%s where id_group in (select id_group from groupid start with id_group=%s connect by parent_group=prior id_group)", isBanForGroupTree.getSelectedIndex(),index);
                DataSet.UpdateQuery(SQL);
            }catch(Exception e){
                JOptionPane.showMessageDialog(null, String.format("Ошибка обновления Ban\nSQL=%s",SQL), "Ошибка!", JOptionPane.ERROR_MESSAGE);
            }
        }
        setChange(false);
        index=((DataNode)evt.getPath().getLastPathComponent()).getIndex();
        selectList(index);
}//GEN-LAST:event_groupTreeValueChanged

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown

    }//GEN-LAST:event_formComponentShown

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try{
            Integer index=null;
            if (groupTree.getSelectionPath()!=null)
            index=((DataNode)groupTree.getSelectionPath().getLastPathComponent()).getIndex();
            String SQL="";
            if (index!=null && isChange()){
            try{
                SQL=String.format("Update groupid set ban=%s where id_group in (select id_group from groupid start with id_group=%s connect by parent_group=prior id_group)", isBanForGroupTree.getSelectedIndex(),index);
                DataSet.UpdateQuery(SQL);
            }catch(Exception e){
                JOptionPane.showMessageDialog(null, String.format("Ошибка обновления Ban\nSQL=%s",SQL), "Ошибка!", JOptionPane.ERROR_MESSAGE);
            }
        }
        setChange(false);
        DataSet.commit();
        setVisible(false);
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Ошибка 'commit'-а изменений ", "Ошибка", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void formComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentHidden

    }//GEN-LAST:event_formComponentHidden

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        try{
            DataSet.rollback();
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Ошибка 'rollback'-а изменений ", "Ошибка", JOptionPane.ERROR_MESSAGE);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosed

    private void listTovarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listTovarActionPerformed
        if (groupTree.getSelectionPath()!=null){
            int index=((DataNode)groupTree.getSelectionPath().getLastPathComponent()).getIndex();
            String SQL=String.format("select trim(t.name)||'; '||trim(s.name) from tovar t, sklad s, (select distinct id_tovar, id_skl from kart where id_group in (select id_group from groupid start with id_group=%s connect by parent_group=prior id_group)) t1 where t1.id_tovar=t.id_tovar and t1.id_skl=s.id_skl order by s.name, t.name", index);
            ArrayList nameAndSklad=new ArrayList();
            try{
                ResultSet rs=DataSet.QueryExec(SQL, false);
                while (rs.next())
                    nameAndSklad.add(rs.getString(1));
            }catch(Exception e){
                JOptionPane.showMessageDialog(null, "Ошибка выборки наименований!");
            }
            DialogWithList dialog=new DialogWithList(null, true);
            dialog.showDialog((String[])nameAndSklad.toArray(new String[nameAndSklad.size()]), "Содержимое группы");
        }
    }//GEN-LAST:event_listTovarActionPerformed

    private void isBanForGroupTreeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isBanForGroupTreeActionPerformed
        
    }//GEN-LAST:event_isBanForGroupTreeActionPerformed

    private void isBanForGroupTreeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_isBanForGroupTreeItemStateChanged
    }//GEN-LAST:event_isBanForGroupTreeItemStateChanged

    private void isBanForGroupTreePopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_isBanForGroupTreePopupMenuWillBecomeInvisible
        setChange(true);
    }//GEN-LAST:event_isBanForGroupTreePopupMenuWillBecomeInvisible

    
    private void selectList(int index){
        try{
            String SQL=String.format("select nvl(ban,0) from groupid where id_group=%s", index);
            ResultSet rs=DataSet.QueryExec(SQL, false);
            rs.next();
            isBanForGroupTree.setSelectedIndex(rs.getInt(1));
//            setValue(section.getSelectedIndex());
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Ошибка выбора Ban", "Ошибка!", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }
    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                GroupAndSectionWire dialog = new GroupAndSectionWire(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTree groupTree;
    private javax.swing.JComboBox isBanForGroupTree;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JMenuItem listTovar;
    private javax.swing.JPopupMenu treePopup;
    // End of variables declaration//GEN-END:variables
    private boolean change = false;
/*    protected int value = -1;

    public int getValue() {
        return value;
    }

    public void setValue(int value) {
        this.value = value;
    }
*/
    public boolean isChange() {
        return change;
    }

    public void setChange(boolean change) {
        this.change = change;
    }

}
