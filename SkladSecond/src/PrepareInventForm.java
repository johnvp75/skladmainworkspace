
import java.awt.event.ActionListener;
import java.awt.print.PrinterException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.awt.event.ActionEvent;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PriceChange.java
 *
 * Created on 13 серп 2009, 12:19:54
 */

/**
 *
 * @author Admin
 */
public class PrepareInventForm extends javax.swing.JDialog {

    /** Creates new form PriceChange */
    public PrepareInventForm(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        skladCombo = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        groupTree = new javax.swing.JTree();
        jScrollPane2 = new javax.swing.JScrollPane();
        String[] nameColumn = new String[4];
        nameColumn[0]="Наименование";
        nameColumn[1]="Кол-во по учету";
        nameColumn[2]="Кол-во по факту";
        nameColumn[3]="Разница";
        priceTable = new javax.swing.JTable(new DefaultTableModel(nameColumn,0));
        printButton = new javax.swing.JButton();
        addCheckBox = new javax.swing.JCheckBox();
        forNow = new javax.swing.JRadioButton();
        forDate = new javax.swing.JRadioButton();
        forNumb = new javax.swing.JRadioButton();
        dateTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setModal(true);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jLabel1.setText("Склад:");

        skladCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        groupTree.setModel(new GroupTreeModel());
        groupTree.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                groupTreeValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(groupTree);

        priceTable.getColumnModel().getColumn(0).setMaxWidth(350);
        priceTable.getColumnModel().getColumn(1).setMaxWidth(60);
        priceTable.getColumnModel().getColumn(2).setMaxWidth(70);
        priceTable.getColumnModel().getColumn(3).setMaxWidth(60);
        jScrollPane2.setViewportView(priceTable);

        printButton.setText("Печать инвентаризационной ведомости");
        printButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printButtonActionPerformed(evt);
            }
        });

        addCheckBox.setText("Добавить к имеющемуся");
        addCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCheckBoxActionPerformed(evt);
            }
        });

        forNow.setSelected(true);
        forNow.setText("Текущие остатки");
        forNow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                forNowActionPerformed(evt);
            }
        });

        forDate.setText("Остатки на дату (начало дня)");
        forDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                forDateActionPerformed(evt);
            }
        });

        forNumb.setText("По накладную (включая)");
        forNumb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                forNumbActionPerformed(evt);
            }
        });

        dateTextField1.setEnabled(false);
        dateTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateTextField1ActionPerformed(evt);
            }
        });

        jButton1.setText("Поиск по части названия");

        jButton2.setText("Сохранить документ");

        jButton3.setText("Зарегистрировать документ");

        jDateChooser1.setDateFormatString("dd.mm.yyyy");
        jDateChooser1.setMaxSelectableDate(new java.util.Date(253370761300000L));
        jDateChooser1.setMinSelectableDate(new java.util.Date(1230764500000L));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(skladCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 576, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(forDate)
                            .addGap(18, 18, 18)
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE))
                        .addComponent(forNow, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jButton1)
                                .addComponent(addCheckBox)
                                .addComponent(forNumb))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                            .addComponent(dateTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(printButton)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addGap(10, 10, 10))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(skladCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(forNow)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(forDate))
                        .addGap(4, 4, 4)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dateTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(forNumb))
                        .addGap(20, 20, 20)
                        .addComponent(addCheckBox)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(printButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)
                        .addGap(307, 307, 307))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 518, Short.MAX_VALUE))
                        .addGap(22, 22, 22))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void groupTreeValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_groupTreeValueChanged
        setGroup(((DataNode)evt.getPath().getLastPathComponent()).getIndex());
        change();
    }//GEN-LAST:event_groupTreeValueChanged

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        try{
            ResultSet rs=DataSet.QueryExec("Select trim(name) from sklad order by UPPER(trim(name))", false);
            skladCombo.removeAllItems();
            while (rs.next()){
                skladCombo.addItem(rs.getString(1));
            }
            if (skladCombo.getItemCount()==0)
                return;
            skladCombo.setSelectedIndex(0);
            rs=DataSet.QueryExec("select trim(name) from type_price order by upper(trim(name))", false);
            priceCombo.removeAllItems();
            while (rs.next()){
                priceCombo.addItem(rs.getString(1));
            }
            if (priceCombo.getItemCount()==0)
                return;
            priceCombo.setSelectedIndex(0);
        }catch(Exception e){
            e.printStackTrace();
        }
        ActionListener actionCombo= new ActionListener(){
            public void actionPerformed(ActionEvent event){
                change();
            }
        };
        skladCombo.addActionListener(actionCombo);
        priceCombo.addActionListener(actionCombo);
    }//GEN-LAST:event_formComponentShown

    private void printButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printButtonActionPerformed
        try {
            priceTable.print();
        } catch (PrinterException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_printButtonActionPerformed

    private void addCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addCheckBoxActionPerformed

    private void forNowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_forNowActionPerformed
        forNow.setSelected(true);
        forDate.setSelected(false);
        forNumb.setSelected(false);
        dateTextField.setEnabled(false);
        change();
    }//GEN-LAST:event_forNowActionPerformed

    private void forDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_forDateActionPerformed
        forDate.setSelected(true);
        forNow.setSelected(false);
        forNumb.setSelected(false);
        dateTextField.setEnabled(true);
    }//GEN-LAST:event_forDateActionPerformed

    private void forNumbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_forNumbActionPerformed
        forNow.setSelected(false);
        forDate.setSelected(false);
        forNumb.setSelected(true);
        dateTextField.setEnabled(false);
        change();
    }//GEN-LAST:event_forNumbActionPerformed

    private void dateTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateTextField1ActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_dateTextField1ActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                PriceChange dialog = new PriceChange(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox addCheckBox;
    private javax.swing.JTextField dateTextField1;
    private javax.swing.JRadioButton forDate;
    private javax.swing.JRadioButton forNow;
    private javax.swing.JRadioButton forNumb;
    private javax.swing.JTree groupTree;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable priceTable;
    private javax.swing.JButton printButton;
    private javax.swing.JComboBox skladCombo;
    // End of variables declaration//GEN-END:variables
    private int Group = 0;

    public int getGroup() {
        return Group;
    }

    public void setGroup(int Group) {
        this.Group = Group;
    }

    private void change(){
        try{
//            priceTable.removeAll();
            if (!addCheckBox.isSelected())
                ((DefaultTableModel)priceTable.getModel()).setRowCount(0);
            ResultSet rs;
            String SQL="";
            if (getGroup()==-2)
                SQL="SELECT distinct i.name, i.cost, p1.cost, p1.akciya, p1.isakcia from " +
                    "((select distinct trim(name) as name, p.cost, t.id_tovar from (tovar t inner join kart k on t.id_tovar=k.id_tovar) " +
//                  "left join (select cost, id_tovar from price where id_price=(select id_price from type_price where name='"+MainCombo.getSelectedItem()+"' )) p on t.id_tovar=p.id_tovar where " +
                    "id_skl=(select id_skl from sklad where name='"+skladCombo.getSelectedItem()+"') " +
                    ") i) left join (select cost, id_tovar, akciya, isakcia from price where id_price=(select id_price from type_price where name='"+priceCombo.getSelectedItem()+"' )) p1 on i.id_tovar=p1.id_tovar" +
                    " order by upper(name)";
            else{
                if (forNow.isSelected())
                    SQL=String.format("select distinct trim(t.name), p.cost, p.isakcia, p.akciya from tovar t, price p where p.id_tovar in (select id from (select t1.pr, t2.real, t1.id from " +
                            "(select sum(l.kol) as pr, l.id_tovar as id from lines l, document d WHERE d.id_doc= l.id_doc AND l.id_tovar in (select id_tovar from kart "+
                            "where kart.id_group in (select id_group from groupid start with id_group=%1$s CONNECT BY PRIOR id_group= groupid.parent_group) and " +
                            "kart.id_skl in (select id_skl from sklad where sklad.name='%2$s')) and d.id_type_doc in (select id_type_doc from type_doc where " +
                            "type_doc.operacia=1) and not(d.numb is null) group BY l.id_tovar) t1 left join (select sum(l.kol) as real, l.id_tovar as id from " +
                            "lines l, document d  WHERE d.id_type_doc in (select id_type_doc from type_doc where type_doc.operacia=2) and not(d.numb is null) and " +
                            "d.id_doc= l.id_doc AND l.id_tovar in (select id_tovar from kart where kart.id_group in (select id_group from groupid start with " +
                            "id_group=%1$s CONNECT BY PRIOR id_group= groupid.parent_group) and kart.id_skl in (select id_skl from sklad where sklad.name='%2$s')) "+
                            "group by l.id_tovar) t2 on t1.id=t2.id) where pr-nvl(real,0)>0) AND p.id_price=(select id_price from type_price where name='%3$s') "+
                            "and p.id_tovar= t.id_tovar order by isakcia, trim(t.name)", getGroup(),skladCombo.getSelectedItem(), priceCombo.getSelectedItem());
                if (forDate.isSelected())
                    SQL=String.format("select distinct trim(t.name) , p.cost, p.isakcia, p.akciya from tovar t, price p where p.id_tovar= t.id_tovar and p.id_price=(select id_price from type_price where name='%s') and p.id_tovar in "+
                        "(select l.id_tovar from lines l, document d where l.id_doc=d.id_doc and d.id_type_doc in (select id_type_doc from type_doc where operacia=1) and d.id_skl=(select id_skl from sklad where name='%s') "+
                        "and d.day>to_date('%s','DD.MM.YYYY')) and p.id_tovar in (select kart.id_tovar from kart where kart.id_group in (select id_group from groupid start with id_group=%s CONNECT BY PRIOR id_group= groupid.parent_group)) order by isakcia, trim(t.name)",
                        priceCombo.getSelectedItem(), skladCombo.getSelectedItem(),dateTextField.getText(),getGroup());
                if (forNumb.isSelected())
                    SQL=String.format("select distinct trim(t.name) as name, p.cost, p.isakcia, p.akciya from tovar t, price p where p.id_tovar= t.id_tovar and p.id_price=(select id_price from type_price where name='%s') and p.id_tovar in "+
                        " (select kart.id_tovar from kart where kart.id_group in (select id_group from groupid start with id_group=%s CONNECT BY PRIOR id_group= groupid.parent_group) and kart.id_skl=(select id_skl from sklad where name='%s')) order by  isakcia, name", priceCombo.getSelectedItem(),getGroup(), skladCombo.getSelectedItem());
                }
            rs=DataSet.QueryExec(SQL, false);
            while (rs.next()){
                String[] rowData=new String[4];
                rowData[0]=rs.getString(1);
//              Number form =new Number();
                rowData[1]=((new DecimalFormat("0.00")).format(rs.getDouble(2))).replace('.', ',') ;
                rowData[2]=rs.getString(4);
                rowData[3]=(rs.getInt(3)==1?"Акция":"");
                int RowCount=((DefaultTableModel)priceTable.getModel()).getRowCount();
                ((DefaultTableModel)priceTable.getModel()).insertRow(RowCount, rowData);
            }
        }catch(Exception e){
            e.printStackTrace();
        }
    }
}
