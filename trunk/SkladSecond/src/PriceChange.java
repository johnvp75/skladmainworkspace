
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.awt.event.ActionEvent;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PriceChange.java
 *
 * Created on 13 серп 2009, 12:19:54
 */

/**
 *
 * @author Admin
 */
public class PriceChange extends javax.swing.JDialog {

    /** Creates new form PriceChange */
    public PriceChange(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        skladCombo = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        groupTree = new javax.swing.JTree();
        inkCheckBox = new javax.swing.JCheckBox();
        nacCheckBox = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        priceCombo = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        okrCombo = new javax.swing.JComboBox();
        koefCheckBox = new javax.swing.JCheckBox();
        nacTextField = new javax.swing.JTextField();
        koefTextField = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        priceTable = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        MainCombo = new javax.swing.JComboBox();
        runButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        closeButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setModal(true);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jLabel1.setText("Склад:");

        skladCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        groupTree.setModel(new GroupTreeModel());
        groupTree.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                groupTreeValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(groupTree);

        inkCheckBox.setText("В большую сторону");

        nacCheckBox.setText("Наценка %");

        jLabel2.setText("Редактируемый Прайс");

        jLabel3.setText("Округление");

        okrCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "До 1", "До 0,1", "До 0,01" }));
        okrCombo.setSelectedIndex(1);
        okrCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okrComboActionPerformed(evt);
            }
        });

        koefCheckBox.setText("Коеффициент");

        nacTextField.setText("0");

        koefTextField.setText("1");

        priceTable.setModel(new PriceTableDataModel());
        jScrollPane2.setViewportView(priceTable);

        jLabel4.setText("Исходная цена");

        MainCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Закупочная цена" }));

        runButton.setText("Расчитать");
        runButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runButtonActionPerformed(evt);
            }
        });

        saveButton.setText("Сохранить");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        closeButton.setText("Закрыть");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(skladCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 320, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MainCombo, 0, 240, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(nacCheckBox)
                                .addGap(61, 61, 61)
                                .addComponent(nacTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(koefCheckBox)
                                .addGap(47, 47, 47)
                                .addComponent(koefTextField))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(priceCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(okrCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(inkCheckBox))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 733, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(closeButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(saveButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(runButton, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(skladCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(MainCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(inkCheckBox)
                            .addComponent(jLabel2)
                            .addComponent(priceCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(okrCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nacTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nacCheckBox)
                            .addComponent(koefTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(koefCheckBox))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 6, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(runButton)
                        .addGap(18, 18, 18)
                        .addComponent(saveButton)
                        .addGap(18, 18, 18)
                        .addComponent(closeButton))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane2)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 518, Short.MAX_VALUE)))
                .addGap(22, 22, 22))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okrComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okrComboActionPerformed

}//GEN-LAST:event_okrComboActionPerformed

    private void runButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runButtonActionPerformed
        for (int i=0;i<priceTable.getModel().getRowCount();i++){
            if ((Boolean)priceTable.getModel().getValueAt(i, 0)){
                priceTable.getModel().setValueAt(cen(i), i, 4);
            }
        }
}//GEN-LAST:event_runButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        try{
            ResultSet rs=DataSet.QueryExec("Select id_skl from sklad where name='"+(String)skladCombo.getSelectedItem()+"'", false);
            rs.next();
            int skl=rs.getInt(1);
            rs=DataSet.QueryExec("Select id_price from type_price where name='"+priceCombo.getSelectedItem()+"'", false);
            rs.next();
            int price=rs.getInt(1);
            for (int i=0; i<priceTable.getModel().getRowCount();i++){
                if ((Boolean)priceTable.getModel().getValueAt(i, 0)){
                    if (DataSet.UpdateQuery("update price set cost="+priceTable.getModel().getValueAt(i, 4)+", akciya="+priceTable.getModel().getValueAt(i, 6)+", isakcia="+(((Boolean)priceTable.getModel().getValueAt(i, 5)).booleanValue()?"1":"0")+
                            " where id_tovar=(select id_tovar from tovar where name='"+priceTable.getModel().getValueAt(i, 1)+"') and id_skl="+skl+" and id_price="+price)==0)
                        DataSet.UpdateQuery("insert into price (cost, akciya, isakcia, id_skl, id_price, id_tovar) select " +
                                ""+priceTable.getModel().getValueAt(i, 4)+
                                ", "+priceTable.getModel().getValueAt(i, 6)+", " +
                                ""+((Boolean)priceTable.getModel().getValueAt(i, 5)?"1":"0")+", " +skl+", "+price+", "+
                                "id_tovar from tovar where name='"+priceTable.getModel().getValueAt(i, 1)+"'");
                }
            }
            DataSet.commit();
        }catch(Exception e){
            try {
                DataSet.rollback();
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
            e.printStackTrace();
        }
}//GEN-LAST:event_saveButtonActionPerformed

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        ((PriceTableDataModel)priceTable.getModel()).removeAll();
        setVisible(false);
}//GEN-LAST:event_closeButtonActionPerformed

    private void groupTreeValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_groupTreeValueChanged
        setGroup(((DataNode)evt.getPath().getLastPathComponent()).getIndex());
        change();
    }//GEN-LAST:event_groupTreeValueChanged

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        try{
            ResultSet rs=DataSet.QueryExec("Select trim(name) from sklad order by UPPER(trim(name))", false);
            skladCombo.removeAllItems();
            while (rs.next()){
                skladCombo.addItem(rs.getString(1));
            }
            if (skladCombo.getItemCount()==0)
                return;
            skladCombo.setSelectedIndex(0);
            rs=DataSet.QueryExec("select trim(name) from type_price order by upper(trim(name))", false);
            priceCombo.removeAllItems();
            while (rs.next()){
                priceCombo.addItem(rs.getString(1));
                MainCombo.addItem(rs.getString(1));
            }
            if (priceCombo.getItemCount()==0)
                return;
            priceCombo.setSelectedIndex(0);
        }catch(Exception e){
            e.printStackTrace();
        }
        ActionListener actionCombo= new ActionListener(){
            public void actionPerformed(ActionEvent event){
                change();
            }
        };
        MainCombo.addActionListener(actionCombo);
        skladCombo.addActionListener(actionCombo);
        priceCombo.addActionListener(actionCombo);
    }//GEN-LAST:event_formComponentShown

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                PriceChange dialog = new PriceChange(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox MainCombo;
    private javax.swing.JButton closeButton;
    private javax.swing.JTree groupTree;
    private javax.swing.JCheckBox inkCheckBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JCheckBox koefCheckBox;
    private javax.swing.JTextField koefTextField;
    private javax.swing.JCheckBox nacCheckBox;
    private javax.swing.JTextField nacTextField;
    private javax.swing.JComboBox okrCombo;
    private javax.swing.JComboBox priceCombo;
    private javax.swing.JTable priceTable;
    private javax.swing.JButton runButton;
    private javax.swing.JButton saveButton;
    private javax.swing.JComboBox skladCombo;
    // End of variables declaration//GEN-END:variables
    private int Group = 0;

    public int getGroup() {
        return Group;
    }

    public void setGroup(int Group) {
        this.Group = Group;
    }

    private String cen(int row){
        double ret=(Double)priceTable.getModel().getValueAt(row, 2)*(nacCheckBox.isSelected()?(1+(new Double(nacTextField.getText())).doubleValue()/100) : 1)*(koefCheckBox.isSelected()?(new Double(koefTextField.getText())).doubleValue():1);
        String str="0.";
        for (int i=0;i<okrCombo.getSelectedIndex();i++)
            str=str+"0";
        NumberFormat formatter = new DecimalFormat ( str ) ;
        //ret=(ret*Math.pow(10, 2-okrCombo.getSelectedIndex())+0.5)/Math.pow(10, 2-okrCombo.getSelectedIndex());
        if (inkCheckBox.isSelected())
            ret=ret+(0.5/Math.pow(10, okrCombo.getSelectedIndex())-0.1/Math.pow(10, okrCombo.getSelectedIndex()+1));
        return formatter.format(ret);
    }
    private void change(){
        ((PriceTableDataModel)priceTable.getModel()).removeAll();
        try{
            ResultSet rs=DataSet.QueryExec("select distinct trim(name) from tovar inner join kart on tovar.id_tovar=kart.id_tovar where (kart.id_group="+getGroup()+
                    " or kart.id_group in (select id_group from groupid where parent_group="+getGroup()+")) and id_skl=(select id_skl from sklad where name='"+skladCombo.getSelectedItem()+"') order by upper(trim(name))", false);
            while (rs.next()){
                ((PriceTableDataModel)priceTable.getModel()).add(rs.getString(1), 0.0, 0.0, 0.0, false, 0);
            }
            for (int i=0;i<((PriceTableDataModel)priceTable.getModel()).size();i++){
                rs=DataSet.QueryExec("select cost, akciya, isakcia from price where (id_tovar=(select id_tovar from tovar where name='"+((PriceTableDataModel)priceTable.getModel()).getValueAt(i, 1)+"')) and (id_price=(select id_price from type_price where name='"+priceCombo.getSelectedItem()+"')) and (id_skl=(select id_skl from sklad where name='"+skladCombo.getSelectedItem()+"'))", false);
                if (rs.next()){
                    ((PriceTableDataModel)priceTable.getModel()).setValueAt(rs.getString(1), i, 3);
                    boolean b=false;
                    if (rs.getInt(3)==1)
                        b=true;
                    ((PriceTableDataModel)priceTable.getModel()).setValueAt(b, i, 5);
                    ((PriceTableDataModel)priceTable.getModel()).setValueAt(rs.getString(2), i, 6);
                }
            }
            if (MainCombo.getSelectedIndex()==0){

            }else
                for (int i=0;i<((PriceTableDataModel)priceTable.getModel()).size();i++){
                    rs=DataSet.QueryExec("select cost, akciya, isakcia from price where (id_tovar=(select id_tovar from tovar where name='"+((PriceTableDataModel)priceTable.getModel()).getValueAt(i, 1)+"')) and (id_price=(select id_price from type_price where name='"+MainCombo.getSelectedItem()+"')) and (id_skl=(select id_skl from sklad where name='"+skladCombo.getSelectedItem()+"'))", false);
                    if (rs.next()){
                        ((PriceTableDataModel)priceTable.getModel()).setValueAt(rs.getDouble(1), i, 2);
                        boolean b=false;
                        if (rs.getInt(3)==1)
                            b=true;
                        ((PriceTableDataModel)priceTable.getModel()).setValueAt(b, i, 5);
                        ((PriceTableDataModel)priceTable.getModel()).setValueAt(rs.getString(2), i, 6);
                    }
                }

        }catch(Exception e){
            e.printStackTrace();
        }

    }
}
