
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.MouseEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PriceForm.java
 *
 * Created on 16.07.2009, 13:23:20
 */

/**
 *
 * @author Admin
 */
public class PriceForm extends javax.swing.JDialog {

    /** Creates new form PriceForm */
    public PriceForm(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        priceCombo = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        okrCombo = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        priceTable = new javax.swing.JTable();
        nacTextField = new javax.swing.JTextField();
        koefTextField = new javax.swing.JTextField();
        runButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        closeButton = new javax.swing.JButton();
        inkCheckBox = new javax.swing.JCheckBox();
        nacCheckBox = new javax.swing.JCheckBox();
        koefCheckBox = new javax.swing.JCheckBox();
        selectAllButton = new javax.swing.JButton();
        unselectButton = new javax.swing.JButton();
        selectNullButton = new javax.swing.JButton();
        invertButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        addCheckBox = new javax.swing.JCheckBox();
        addTextField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                formComponentHidden(evt);
            }
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jLabel1.setText("Прайс");

        priceCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priceComboActionPerformed(evt);
            }
        });

        jLabel2.setText("Округление");

        okrCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "До 1", "До 0,1", "До 0,01" }));
        okrCombo.setSelectedIndex(1);
        okrCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okrComboActionPerformed(evt);
            }
        });

        priceTable.setModel(new PriceTableDataModel());
        priceTable.setCellSelectionEnabled(true);
        priceTable.getTableHeader().setResizingAllowed(false);
        priceTable.getTableHeader().setReorderingAllowed(false);
        priceTable.putClientProperty("terminateEditOnFocusLost", Boolean.TRUE);
        priceTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                priceTableMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(priceTable);
        priceTable.getTableHeader().setResizingAllowed(true);
        priceTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        nacTextField.setText("0");

        koefTextField.setText("1");
        koefTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                koefTextFieldKeyTyped(evt);
            }
        });

        runButton.setText("Расчитать");
        runButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runButtonActionPerformed(evt);
            }
        });

        saveButton.setText("Сохранить");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        closeButton.setText("Закрыть");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        inkCheckBox.setText("В большую сторону");

        nacCheckBox.setText("Наценка %");

        koefCheckBox.setText("Коеффициент");

        selectAllButton.setText("Отметить все");
        selectAllButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectAllButtonActionPerformed(evt);
            }
        });

        unselectButton.setText("Убрать все");
        unselectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unselectButtonActionPerformed(evt);
            }
        });

        selectNullButton.setText("Отметить нулевые");
        selectNullButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectNullButtonActionPerformed(evt);
            }
        });

        invertButton.setText("Инвертировать");
        invertButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                invertButtonActionPerformed(evt);
            }
        });

        jButton1.setText("Фильтр");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        addCheckBox.setText("Прибавить");

        addTextField.setText("1");
        addTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                addTextFieldKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 591, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(closeButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(saveButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(runButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(selectAllButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                                    .addComponent(unselectButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(selectNullButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(invertButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(priceCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(nacCheckBox)
                                    .addComponent(koefCheckBox))
                                .addGap(47, 47, 47)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(koefTextField)
                                    .addComponent(nacTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(okrCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(addCheckBox)
                                .addGap(47, 47, 47)
                                .addComponent(addTextField)))
                        .addGap(18, 18, 18)
                        .addComponent(inkCheckBox)))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(priceCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(okrCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inkCheckBox))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nacTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nacCheckBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(koefTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(koefCheckBox)
                    .addComponent(addTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addCheckBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(runButton)
                        .addGap(18, 18, 18)
                        .addComponent(saveButton)
                        .addGap(18, 18, 18)
                        .addComponent(closeButton)
                        .addGap(18, 18, 18)
                        .addComponent(selectAllButton)
                        .addGap(18, 18, 18)
                        .addComponent(unselectButton)
                        .addGap(18, 18, 18)
                        .addComponent(selectNullButton)
                        .addGap(18, 18, 18)
                        .addComponent(invertButton)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void runButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runButtonActionPerformed
        for (int i=0;i<priceTable.getModel().getRowCount();i++){
            if ((Boolean)priceTable.getModel().getValueAt(i, 0)){
                priceTable.getModel().setValueAt(cen(i), i, 4);
            }
        }
    }//GEN-LAST:event_runButtonActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        ActionListener listener = new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try{
                    for (int i=0;i<((PriceTableDataModel)priceTable.getModel()).size();i++){
                        ResultSet rs=DataSet.QueryExec("select cost, akciya, isakcia from price where (id_tovar=(select id_tovar from tovar where name='"+((PriceTableDataModel)priceTable.getModel()).getValueAt(i, 1)+"')) and (id_price=(select id_price from type_price where name='"+priceCombo.getSelectedItem()+"')) and (id_skl=(select id_skl from sklad where name='"+getSklad()+"'))", false);
                        if (rs.next()){
                            ((PriceTableDataModel)priceTable.getModel()).setValueAt(rs.getString(1), i, 3);
                            boolean b=false;
                            if (rs.getInt(3)==1)
                                b=true;
                            ((PriceTableDataModel)priceTable.getModel()).setValueAt(b, i, 5);
                            ((PriceTableDataModel)priceTable.getModel()).setValueAt(rs.getString(2), i, 6);
                        }
                    }

                }catch(Exception e){
                    e.printStackTrace();
                }
                
            }
        };
        priceCombo.removeActionListener(listener);
        priceCombo.removeAllItems();
        try{

            ResultSet rs=DataSet.QueryExec("Select trim(name) from type_price order by name",false);
            while (rs.next())
                priceCombo.addItem(rs.getString(1));
            rs=DataSet.QueryExec("select trim(name) from type_price where id_price=(select id_price from sklad where name='"+getSklad()+"')", false);
            rs.next();
            priceCombo.setSelectedItem(rs.getString(1));
            for (int i=0;i<((PriceTableDataModel)priceTable.getModel()).size();i++){
                rs=DataSet.QueryExec("select cost, akciya, isakcia from price where (id_tovar=(select id_tovar from tovar where name='"+((PriceTableDataModel)priceTable.getModel()).getValueAt(i, 1)+"')) and (id_price=(select id_price from type_price where name='"+priceCombo.getSelectedItem()+"')) and (id_skl=(select id_skl from sklad where name='"+getSklad()+"'))", false);
                if (rs.next()){
                    ((PriceTableDataModel)priceTable.getModel()).setValueAt(rs.getString(1), i, 3);
                    boolean b=false;
                    if (rs.getInt(3)==1)
                        b=true;
                    ((PriceTableDataModel)priceTable.getModel()).setValueAt(b, i, 5);
                    ((PriceTableDataModel)priceTable.getModel()).setValueAt(rs.getString(2), i, 6);
                }
            }
            inkCheckBox.setSelected(false);
            koefCheckBox.setSelected(false);
            koefTextField.setText("1");
            nacCheckBox.setSelected(false);
            nacTextField.setText("0");
            okrCombo.setSelectedIndex(1);
        }catch(Exception e){
            e.printStackTrace();
        }
        priceCombo.addActionListener(listener);
    }//GEN-LAST:event_formComponentShown

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        ((PriceTableDataModel)priceTable.getModel()).removeAll();
        setVisible(false);
    }//GEN-LAST:event_closeButtonActionPerformed

    private void okrComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okrComboActionPerformed
        
    }//GEN-LAST:event_okrComboActionPerformed

    private void formComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentHidden
//        ((PriceTableDataModel)priceTable.getModel()).removeAll();
    }//GEN-LAST:event_formComponentHidden

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        try{
            ResultSet rs=DataSet.QueryExec("Select id_skl from sklad where name='"+getSklad()+"'", false);
            rs.next();
            int skl=rs.getInt(1);
            rs=DataSet.QueryExec("Select id_price from type_price where name='"+priceCombo.getSelectedItem()+"'", false);
            rs.next();
            int price=rs.getInt(1);
            for (int i=0; i<priceTable.getModel().getRowCount();i++){
                if ((Boolean)priceTable.getModel().getValueAt(i, 0)){
                        if (DataSet.UpdateQuery("update price set cost="+priceTable.getModel().getValueAt(i, 4)+", akciya="+priceTable.getModel().getValueAt(i, 6)+", isakcia="+(((Boolean)priceTable.getModel().getValueAt(i, 5)).booleanValue()?"1":"0")+
                                " where id_tovar=(select id_tovar from tovar where name='"+priceTable.getModel().getValueAt(i, 1)+"') and id_skl="+skl+" and id_price="+price)==0)
                            DataSet.UpdateQuery("insert into price (cost, akciya, isakcia, id_skl, id_price, id_tovar) select " +
                                ""+priceTable.getModel().getValueAt(i, 4)+
                                ", "+priceTable.getModel().getValueAt(i, 6)+", " +
                                ""+((Boolean)priceTable.getModel().getValueAt(i, 5)?"1":"0")+", " +skl+", "+price+", "+
                                "id_tovar from tovar where name='"+priceTable.getModel().getValueAt(i, 1)+"'");
                }
            }
            DataSet.commit();
        }catch(Exception e){
            try {
                DataSet.rollback();
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
            e.printStackTrace();
        }
    }//GEN-LAST:event_saveButtonActionPerformed

    private void priceComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priceComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_priceComboActionPerformed

    private void selectAllButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectAllButtonActionPerformed
        for (int i=0;i<((PriceTableDataModel)priceTable.getModel()).size();i++){
            priceTable.setValueAt(true, i, 0);
        }
}//GEN-LAST:event_selectAllButtonActionPerformed

    private void unselectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unselectButtonActionPerformed
        for (int i=0;i<((PriceTableDataModel)priceTable.getModel()).size();i++){
            priceTable.setValueAt(false, i, 0);
        }
    }//GEN-LAST:event_unselectButtonActionPerformed

    private void selectNullButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectNullButtonActionPerformed
        for (int i=0;i<((PriceTableDataModel)priceTable.getModel()).size();i++){
            if (((Double)priceTable.getValueAt(i, 3))==0)
                priceTable.setValueAt(true, i, 0);
        }
}//GEN-LAST:event_selectNullButtonActionPerformed

    private void invertButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_invertButtonActionPerformed
        for (int i=0;i<((PriceTableDataModel)priceTable.getModel()).size();i++){
            if ((Boolean)priceTable.getValueAt(i, 0))
                priceTable.setValueAt(false, i, 0);
            else
                priceTable.setValueAt(true, i, 0);
        }
    }//GEN-LAST:event_invertButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String str=JOptionPane.showInputDialog("Введите часть названия для фильтра");
        for (int i=0;i<((PriceTableDataModel)priceTable.getModel()).size();i++){
            if (((String)priceTable.getValueAt(i, 1)).toUpperCase().indexOf(str.toUpperCase())>-1)
                priceTable.setValueAt(true, i, 0);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void priceTableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_priceTableMousePressed
	if (evt.getButton()==MouseEvent.BUTTON1 && evt.getClickCount()==2){
		if (!(((JTextField)priceTable.getEditorComponent())==null)){
			((JTextField)priceTable.getEditorComponent()).addKeyListener(new KeyAdapter(){
				public void keyTyped(KeyEvent event){
					if (event.getKeyChar()==',')
						event.setKeyChar('.');
				}
			});
		}
	}        // TODO add your handling code here:
    }//GEN-LAST:event_priceTableMousePressed

    private void koefTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_koefTextFieldKeyTyped
        if (evt.getKeyChar()==',')
            evt.setKeyChar('.');
        // TODO add your handling code here:
    }//GEN-LAST:event_koefTextFieldKeyTyped

    private void addTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_addTextFieldKeyTyped
        if (evt.getKeyChar()==',')
            evt.setKeyChar('.');
        // TODO add your handling code here:
    }//GEN-LAST:event_addTextFieldKeyTyped
    public void dialogShown(Vector<String> nazv, Vector<Double> cost){
        ((PriceTableDataModel)priceTable.getModel()).removeAll();
        for (int i=0; i<nazv.size();i++)
            ((PriceTableDataModel)priceTable.getModel()).add(nazv.get(i), cost.get(i), 0.0, 0.0, false, 0);
        setVisible(true);
    }
    /**
    * @param args the command line arguments
    */
/*    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                PriceForm dialog = new PriceForm(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
*/
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox addCheckBox;
    private javax.swing.JTextField addTextField;
    private javax.swing.JButton closeButton;
    private javax.swing.JCheckBox inkCheckBox;
    private javax.swing.JButton invertButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JCheckBox koefCheckBox;
    private javax.swing.JTextField koefTextField;
    private javax.swing.JCheckBox nacCheckBox;
    private javax.swing.JTextField nacTextField;
    private javax.swing.JComboBox okrCombo;
    private javax.swing.JComboBox priceCombo;
    private javax.swing.JTable priceTable;
    private javax.swing.JButton runButton;
    private javax.swing.JButton saveButton;
    private javax.swing.JButton selectAllButton;
    private javax.swing.JButton selectNullButton;
    private javax.swing.JButton unselectButton;
    // End of variables declaration//GEN-END:variables
    private String Sklad;

    public String getSklad() {
        return Sklad;
    }

    public void setSklad(String Sklad) {
        this.Sklad = Sklad;
    }
    private String cen(int row){
        double ret=(Double)priceTable.getModel().getValueAt(row, 2)*(nacCheckBox.isSelected()?(1+(new Double(nacTextField.getText())).doubleValue()/100) : 1)*(koefCheckBox.isSelected()?(new Double(koefTextField.getText())).doubleValue():1)+(addCheckBox.isSelected()?(new Double(addTextField.getText())) : 0);
        String str="0.";
        for (int i=0;i<okrCombo.getSelectedIndex();i++)
            str=str+"0";
        NumberFormat formatter = new DecimalFormat ( str ) ;
        //ret=(ret*Math.pow(10, 2-okrCombo.getSelectedIndex())+0.5)/Math.pow(10, 2-okrCombo.getSelectedIndex());
        if (inkCheckBox.isSelected())
            ret=ret+(0.5/Math.pow(10, okrCombo.getSelectedIndex())-0.1/Math.pow(10, okrCombo.getSelectedIndex()+1));
        return formatter.format(ret);
    }
}
